FORMAT: 1A
HOST: http://scrapper-nothosted.devclub.in/

# pantomath

One Stop platform for all the scraping need of the club.

## Consolidated Gradesheet [/api/gradesheet]
### Retrieve Gradesheet of the student [POST]
+ Headers

        Api-Key: your-api-key
        Application-Name: your-application-name

+ Request (application/x-www-form-urlencoded)

        {
            "username": "cs1160xxx",
            "password": "abc$"
        }
        
+ Response 200 (application/json)

        [
            {
                "cgpa": x.xxx,
                "sgpa": x.xxx,
                "earned_credits": XX,
                "total_credits": XX,
                "grades": {
                    "COL100": {
                        "course_category": "EA",
                        "course_credits": 4,
                        "course_grade": "A",
                        "course_name": "INTRO. TO COMPUTER SCIENCE"
                    }, ...
                }
            }, ...
        ]
        
+ Response 400 (application/json)

        {
            "error": "Bad Request, Error Message"
        }
        
+ Response 403 (application/json)

        {
            "error": "Invalid Login Credentials"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error"
        }
        
        
## Semester Grades [/api/grades]
### Retrieve End Semester Grades of the student [POST]

+ Headers

        Api-Key: your-api-key
        Application-Name: your-application-name
        
+ Request (application/x-www-form-urlencoded)

        {
            "username": "cs1160xxx",
            "password": "abc$"
        }
        
+ Response 200 (application/json)

        {
            "COL100": {
                "course_category": "EA",
                "course_credits": 4,
                "course_grade": "A",
                "course_name": "INTRO. TO COMPUTER SCIENCE"
            }, ...
        }
        
+ Response 400 (application/json)

        {
            "error": "Bad Request, Error Message"
        }
        
+ Response 403 (application/json)

        {
            "error": "Invalid Login Credentials"
        }
        
+ Response 404 (application/json)

        {
            "error": "Grades API Not Available Yet.."
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error"
        }
        
## Student Records & Profile [/api/studentRecords]
### List Department Students [GET]

+ Headers

        Api-Key: your-api-key
        Application-Name: your-application-name
        
+ Request (application/x-www-form-urlencoded)
    
        {
            "category": "cs116",
        }

+ Response 200 (application/json)

        [
            {
                "Name": "First Second",
                "Entry": "2016CS10NNN",
                "UID": "cs116nnnn"
            }, ...
        ]
        
+ Response 400 (application/json)

        {
            "error": "No category provided/Students not found"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error"
        }


### Student Info [POST]

+ Headers

        Api-Key: your-api-key
        Application-Name: your-application-name
        
+ Request (application/x-www-form-urlencoded)
    
        {
            "uid": "cs1160xxx",
            "entry": "", (optional)
            "dateOfBirth": "true", (optional)
            "gender": "true", (optional)
            "bloodGroup": "true", (optional)
            "suspended": "true" (optional),
        }

+ Response 200 (application/json)

        [
            {
                "name": "First Second",
                "department": "cse",
                "category": "btech",
                "altEmail": "abc@bbb.com",
                (optional)
                "entry": "2016CS10xxx",
                "dateOfBirth": "YYYYMMDD",
                "gender": "M",
                "bloodGroup": "X+",
                "suspended": "No"
            }
        ]
        
+ Response 400 (application/json)

        {
            "error": "No uid provided/Invalid UID"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error"
        }
        
    
## Courses Collection [/api/courseInfo]
### List all offered courses in the semester [GET]

+ Headers

        Api-Key: your-api-key
        Application-Name: your-application-name
        
+ Request (application/x-www-form-urlencoded)

+ Response 200 (application/json)

        {
            "COL215": {
                "coordinator": "ANSHUL KUMAR",
                "credit": 5,
                "limit": "120",
                "name": "DIGITAL LOGIC & SYSTEM DESIGN",
                "slot": "E",
                "structure": "3-0-4"
            }, ...
        },
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error"
        }

### Get Course Information [POST]

+ Headers

        Api-Key: your-api-key
        Application-Name: your-application-name
        
+ Request (application/x-www-form-urlencoded)

        {
            course_code: "COL215"
        }
        
+ Response 200 (application/json)

        {
            "coordinator": "ANSHUL KUMAR",
            "credit": 5,
            "limit": "120",
            "name": "DIGITAL LOGIC & SYSTEM DESIGN",
            "slot": "E",
            "structure": "3-0-4"
        }
        
+ Response 400 (application/json)

        {
            "error": "No course code provided."
        }
        
+ Response 404 (application/json)

        {
            "error": "Course is not present in the database"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error"
        }
        
### Update all offered courses in the semester [PUT]

+ Request (application/x-www-form-urlencoded)

        {
            "admin_secret": "admin_secret_key",
            "db_secret": "db_admin_secret_key"
        }

+ Response 200 (application/json)

        {
            "status": "DB updated Successfully"
        }
        
+ Response 404 (application/json)
    
        {
            "error": "API not available yet..."
        }
        
### Delete the courses database of the semester [DELETE]

+ Request (application/x-www-form-urlencoded)

        {
            "admin_secret": "admin_secret_key",
            "db_secret": "db_admin_secret_key"
        }

+ Response 200 (application/json)
    
        {
            "status": "DB deleted Successfully"
        }

+ Response 404 (application/json)
    
        {
            "error": "API not available yet..."
        }

            
## Student Registered Courses [/api/registeredCourses]
### List registered courses of Student [POST]

+ Headers

        Api-Key: your-api-key
        Application-Name: your-application-name
        
+ Request (application/x-www-form-urlencoded)

        {
            username: "cs1160xxx"
        }
        
+ Response 200 (application/json)

        {
            "courses": [
                {
                    "code": "COL3XX",
                    "slot": "P"
                }, ...
            ],
            "name": "FIRST SECOND"
        }
   
+ Response 400 (application/json)

        {
            "error": "No username provided."
        }

+ Response 404 (application/json)

        {
            "error": "Username is not present in the database"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error"
        }

### Update registered courses of All Students [PUT]
+ Request (application/x-www-form-urlencoded)

        {
            "admin_secret": "admin_secret_key",
            "db_secret": "db_admin_secret_key"
        }

+ Response 200 (application/json)

        {
            "status": "DB updated Successfully"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error"
        }
        
### Delete the student courses database [DELETE]
+ Request (application/x-www-form-urlencoded)

        {
            "admin_secret": "admin_secret_key",
            "db_secret": "db_admin_secret_key"
        }

+ Response 200 (application/json)

        {
            "status": "DB deleted Successfully"
        }

+ Response 404 (application/json)
        
        {
            "error": "API not implemented yet.."
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error"
        }
        

        
## Student Daily Schedule [/api/schedule]
*CAUTION*: Updation takes long time.
### Get Student Timetable [GET]

+ Headers

        Api-Key: your-api-key
        Application-Name: your-application-name
        
+ Request (application/x-www-form-urlencoded)

        {
            "entry": "2016CS10xxx"
        }
        
+ Response 200 (application/json)

        [
            {
                course_code: XXXNNN,
                slot: P,
                room: "LH xxx --or-- NA",
                room_capacity: "300 --or-- NA"
                schedule: {
                    day: {
                        start: HH:MM,
                        end: HH:MM
                    }, ...
                }
            }, ...
        ]
   
+ Response 400 (application/json)

        {
            "error": "Entry number not provided"
        }

+ Response 404 (application/json)

        {
            "error": "Student record not available"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error Message"
        }
        
        
### Update schedule information Database [PUT]

+ Request (application/x-www-form-urlencoded)

        {
            "pdf_link": "http://timetable.iitd.ac.in/link/to/room-booking.pdf",
            "admin_secret": "admin_secret_key",
            "db_secret": "db_admin_secret_key"
        }
    
+ Response 200 (application/json)

        {
            "status": "DB updated Successfully"
        }

+ Response 400 (application/json)

        {
            "error": "PDF Link not provided / has a problem"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error Message"
        }
        
        
### Delete schedule information Database [DELETE]
+ Request (application/x-www-form-urlencoded)

        {
            "admin_secret": "admin_secret_key",
            "db_secret": "db_admin_secret_key"
        }
        
+ Response 200 (application/json)

        {
            "status": "DB deleted Successfully"
        }

        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error Message"
        }
                
        
        
## Student Exam Schedule [/api/examSchedule]
*CAUTION*: Updation takes long time.

### Get Student Exam Timetable [GET]

+ Headers

        Api-Key: your-api-key
        Application-Name: your-application-name
        
+ Request (application/x-www-form-urlencoded)

        {
            "entry": "2016CS10xxx",
            "exam_type": "M1/M2/MJ"
        }
        
+ Response 200 (application/json)

        [
            {
                course_code: XXXNNN,
                date: String (23 Aug 2018 (Thu) ),
                schedule: [
                    {
                        room: 'LH 121',
                        capacity: Number,
                        time: {
                            start: H:MM,
                            end: H:MM
                        }
                    }, ...
                ],
                slot: 'A'
            }
        ]
   
+ Response 400 (application/json)

        {
            "error": "Entry number not provided / Valid exam type not provided"
        }

+ Response 404 (application/json)

        {
            "error": "Student record not available"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error Message"
        }
        
        
### Update exam schedule information Database [PUT]
+ Request (application/x-www-form-urlencoded)

        {
            "exam_type": "minor/major",
            "pdf_link": "http://timetable.iitd.ac.in/link/to/exam_schedule.pdf",
            "admin_secret": "admin_secret_key",
            "db_secret": "db_admin_secret_key"
        }
    
+ Response 200 (application/json)

        {
            "status": "DB updated Successfully"
        }

+ Response 400 (application/json)

        {
            "error": "PDF Link not provided / has a problem"
        }
        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error Message"
        }
        
        
### Delete exam schedule information Database [DELETE]
+ Request (application/x-www-form-urlencoded)

        {
            "admin_secret": "admin_secret_key",
            "db_secret": "db_admin_secret_key"
        }

+ Response 200 (application/json)

        {
            "status": "DB deleted Successfully"
        }

        
+ Response 500 (application/json)

        {
            "error": "Internal Server Error Message"
        }
                
