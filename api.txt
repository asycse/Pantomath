// Grades API -- Academics1
POST: /api/grades                   // Get user grades of the current semester
    params:
        body:
            username                // kerberos username
            password                // kerberos password 
    return:
        status_code
        error: false/true
        message: "..string"
        data: {                   // grades json object
            course_code: {
                course_name: "xxx",
                course_category: "XX",
                course_credits: X,
                grade: "X"
            }, ...
        } 
(Note: grades API is not up since it can't be tested for correctness before sem ends)


POST: /api/gradesheet             // Get cumulative user gradesheet
    params:
        body:
            username                // kerberos username
            password                // kerberos password 
    return:
        status_code
        error: false/true
        message: "..string"
        data: [                   // semester array of grades. #Semester = index + 1
            {                    // Semester information
                cgpa: x.xxx,
                sgpa: x.xxx,
                earned_credits: xx,
                total_credits: xx,
                grades: {
                    course_code: {
                        course_name: "xxx",
                        course_category: "XX",
                        course_credits: X,
                        grade: "X"
                    }, ...
                }   
            }, ...
        ]


// Courses API -- Academics1
POST: /api/updateCoursesDB          // Updates the student.json in our database
    params:
        body:
    return:
        status_code
        error: false/true
        message: "..string"

GET, POST: /api/registeredCourses         // Get all registered courses for given username
    params:
        body:
            username                // kerberos username
    return:
        status_code
        error: false/true
        message: "..string"
        data: {                   // registered courses json object
            "name" : name
            "courses": [
                        {   
                            "code": "xxx",
                            "slot": X,
                        },...
                    ]
        } 

GET, POST: /api/allCourses         // Gets information about all the courses floated this semester
    params:
        body:
    return:
        status_code
        error: false/true
        message: "..string"
        data: {           
            "course_code": {
                "name": "...",
                "coordinator": "...",
                "credit": XX,
                "limit": XX,
                "slot": "P",
                "structure": "L-T-P"
            }, ...
        } 

GET, POST: /api/courseInfo         // Gets information about all this course
    params:
        body:
            course_code
    return:
        status_code
        error: false/true
        message: "..string"
        data: {                   // info of this course
            "name": "...",
            "coordinator": "...",
            "credit": XX,
            "limit": XX,
            "slot": "P",
            "structure": "L-T-P"
        } 



// LDAP API
POST: /api/deptStudentRecords    // Fetch list of students and entry numbers in this department
    params:
        body:
            category         // the department code whose data is to be fetched of the form `cs116`
    return:
        status_code
        error: false/true
        message: "..string"
        data: [
            {
                "Name": "...",
                "Entry": "...",
                "UID": "..."
            }, ...
        ]


POST: /api/getStudentInfo    // Fetch list of students and entry numbers in this department
    params:
        body:
            uid         // the User Id of the student you want to query

            // Optional Parameters
            entry: true/false/anything      // If you want the entry number of user returned
            dateOfBirth:
            gender:
            bloodGroup:
            suspended:
            emailalias:
    return:
        status_code
        error: false/true
        message: "..string"
        data: [
            {
                "department": "...",
                "category": "...",          // btech / mtech / dual etc. 
                "name": "..."           // Name of the person
                "altEmail": "..."           // Alternate Email Address
                "<Optional Parameters>": "..."
            }, ...
        ]

POST: /api/getAllDepartmentRecords    // Fetch list of students and entry numbers in all departments
    CANCELLED AS FOR LDAP ITS TOO MUCH DATA TO QUERY AND RETURN    


// Note: Following 3 APIs not provided yet. 
POST: /api/updateAllHistoricalOfferedCourses  // Fetch all the offered courses till now in IITD and store in our database
    params:
        body:
            username                // kerberos username
            password                // kerberos password 
            devclub_secret          // A secret token for verifying use
    return:
        status_code
        error: false/true
        message: "..string"


GET: /api/getAllHistoricalOfferedCourses  // Fetch all the offered courses till now in IITD
    params:
        body:
    return:
        status_code
        error: false/true
        message: "..string"

GET: /api/getRegisteredStudents    // Fetch all the registered students in this course and store in our database
    params:
        body:
            course_code             // the course_code whose data is to be fetched
    return:
        status_code
        error: false/true
        message: "..string"
        data: [
            {
                Name: "...",
                Entry: "...",
                group: "..."
            }
        ]

// get all profs list => LDAP

// -------------- (Next Version -- Will be added later) ---------------

// Public NGU API
GET: /api/getNguCredits             // Fetch the NGU credit information of the student
    params:
        body:
            username                // kerberos username
            password                // kerberos password 
    return:
        status_code
        error: false/true
        message: "..string"
        data: {                     // NGU data
            NGU_category: {         // NDN/NEN/NLN/..
                credits_required: X,
                credits_approved: X,
                credits_pending: X
            }, ...
        }


// Public Timetable API
GET: /api/getSchedule             // Fetch the user schedule
    params:
        body:
            username                // kerberos username
            password                // kerberos password 
    return:
        status_code
        error: false/true
        message: "..string"
        pdfData: "TBD"
